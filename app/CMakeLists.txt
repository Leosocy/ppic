#####################
#   ppic app cmake  #
#####################

CMAKE_MINIMUM_REQUIRED(VERSION 3.0)

SET(PROJECT_EXE_NAME ppic_app)
SET(PROJECT_APP_NAME ppic)
PROJECT(${PROJECT_EXE_NAME})

IF(${CMAKE_BUILD_TEST})
        SET(GCC_COVERAGE_COMPILE_FLAGS "-ggdb -coverage -fprofile-arcs -ftest-coverage")
        SET(GCC_COVERAGE_LINK_FLAGS    "-coverage -lgcov")
ENDIF()
SET(CMAKE_CXX_FLAGS  "--std=c++11 ${CMAKE_CXX_FLAGS} ${GCC_COVERAGE_COMPILE_FLAGS}")
SET(CMAKE_EXE_LINKER_FLAGS  "${CMAKE_EXE_LINKER_FLAGS} ${GCC_COVERAGE_LINK_FLAGS}")

SET(APP_ROOT ${PROJECT_SOURCE_DIR})

INCLUDE_DIRECTORIES(${APP_ROOT})

FILE(GLOB_RECURSE SRC_FILES *.c *.cc *.cpp)
LIST(REMOVE_ITEM SRC_FILES "${PROJECT_SOURCE_DIR}/main.cpp")
MESSAGE(STATUS ${SRC_FILES})
FILE(GLOB_RECURSE HEADER_FILES *.h *.hpp)

ADD_LIBRARY(${PROJECT_APP_NAME} SHARED ${HEADER_FILES} ${SRC_FILES})
ADD_EXECUTABLE(${PROJECT_EXE_NAME} main.cpp)

SET(APP_DEPENDENCES
        mysqlcppconn8)
SET(EXE_DEPENDENCES
        ${PROJECT_APP_NAME})

TARGET_LINK_LIBRARIES(${PROJECT_APP_NAME} ${APP_DEPENDENCES})
TARGET_LINK_LIBRARIES(${PROJECT_EXE_NAME} ${EXE_DEPENDENCES})